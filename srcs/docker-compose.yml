version: '3'
services:
  mariadb:
    container_name: mariadb
    build:
      context: requirements/mariadb
      args:
        WP_DB_NAME:           ${WP_DB_NAME}
        MYSQL_USER:           ${MYSQL_USER}
        MYSQL_PASSWORD:       ${MYSQL_PASSWORD}
        MYSQL_ROOT_PASSWORD:  ${MYSQL_ROOT_PASSWORD}
    restart: always
    expose:
      - 3306
    networks:
      - database
    env_file:
      - .env
    environment:
      WP_DB_NAME:             ${WP_DB_NAME}
      MYSQL_USER:             ${MYSQL_USER}
      MYSQL_PASSWORD:         ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD:    ${MYSQL_ROOT_PASSWORD}
    entrypoint: mysqld
    volumes:
      - db:/var/lib/mysql/
    tty: true
  nginx:
    container_name: nginx
    build: requirements/nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    networks:
      - nginx_bridge
    volumes:
      - www:/var/www
    tty: true
    entrypoint: nginx -g 'daemon off;'
  wordpress:
    container_name: wordpress
    build:
      context: requirements/wordpress
      target: inception_wordpress
    restart: always
    expose:
      - 9000
      - 9001
    networks:
      - database
      - nginx_bridge
    depends_on:
      - mariadb
    env_file:
      - .env
    tty: true
    entrypoint: su -c "/usr/sbin/php-fpm7 -F -R" - root
  wpcli:
    container_name: wpcli
    build:
      context: requirements/wordpress
      target: inception_wpcli
    restart: 'no'
    depends_on:
      - mariadb
    env_file:
      - .env
    volumes_from:
      - nginx
    networks:
      - database
    entrypoint: su www -s /scripts/entry-point.sh
  # adminer:
  #   container_name: adminer
  #   build: 
  #     context: requirements/bonus/adminer
  #   restart: 'no'
  #   depends_on:
  #     - nginx
  #   volumes_from:
  #     - nginx
  #   command: echo 'Adminer built'
  # test:
  #   image: alpine
  #   restart: always
  static:
    container_name: static
    build:
      context: requirements/bonus/static
    restart: 'no'
    volumes_from:
      - nginx
    entrypoint: git clone https://github.com/untel/untel.github.io /var/www/static

networks:
  database:
  nginx_bridge:

volumes:
  db:
    driver_opts:
      type: none
      o: bind
      device: "$HOME/data/db"
  www:
    driver_opts:
      type: none
      o: bind
      device: "$HOME/data/www"